stream_over_http_enabled: true

server:
  http_listen_port: 3200
  log_level: info

query_frontend:
  search:
    duration_slo: 5s
    throughput_bytes_slo: 1.073741824e+09
  trace_by_id:
    duration_slo: 5s

distributor:
  receivers:
    otlp:
      protocols:
        http:
        grpc:

ingester:
  max_block_duration: 10m               # cut the headblock when this much time passes. this is being set for demo purposes and should probably be left alone normally

compactor:
  compaction:
    block_retention: 1h                # overall Tempo trace retention. set for demo purposes

metrics_generator:
  registry:
    external_labels:
      source: tempo
      cluster: docker-compose
  storage:
    remote_write:
      - url: http://mimir:9009/api/v1/push
        send_exemplars: true
  processor:
    span_metrics:
      dimensions: [ x-tenant-id, x-client-id, http.response.status_code, http.response.body.size ]
    #   dimension_mappings: [
    #     {
    #         name: tenant,
    #         source_labels: x-tenant-id
    #     },
    #     {
    #         name: client,
    #         source_labels: x-client-id
    #     },
    #     {
    #         name: status_code,
    #         source_labels: http.response.status_code
    #     },
    #     {
    #         name: response_size,
    #         source_labels: http.response.body.size
    #     }
    #   ]

storage:
  trace:
    backend: s3
    s3:
        endpoint: minio:9000
        insecure: true
        region: local
        access_key: "${TEMPO_MINIO_ACCESS_KEY_ID}"
        secret_key: "${TEMPO_MINIO_SECRET_ACCESS_KEY}"
        bucket: "${TEMPO_MINIO_BUCKET_NAME}"

overrides:
  defaults:
    metrics_generator:
      processors: [service-graphs, span-metrics, local-blocks] # enables metrics generator
      generate_native_histograms: both
