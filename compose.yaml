networks:
  net:

services:

  pets:
    build:
      context: ./apps/veterinary_clinic/pets/
      dockerfile: Dockerfile
    networks:
      - net
    ports:
      - 8081:8080

  owners:
    build:
      context: ./apps/veterinary_clinic/owners/
      dockerfile: Dockerfile
    networks:
      - net
    ports:
      - 8082:8080

  doctors:
    build:
      context: ./apps/veterinary_clinic/doctors/
      dockerfile: Dockerfile
    networks:
      - net
    ports:
      - 8083:8080

  krakend:
    image: devopsfaith/krakend:2.6.3
    volumes:
      - ./apps/krakend/krakend.json:/etc/krakend/krakend.json
    networks:
      - net
    ports:
      - 8080:8080
      - 8001:9090

  keycloak:
    image: keycloak/keycloak
    networks:
      - net
    ports:
      - 8090:8080
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    command: ["start-dev"]

  grafana:
    image: grafana/grafana
    networks:
      - net
    ports:
      - "3000:3000"

  init-volumes:
    image: alpine
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
      - "/var/mimir"
      - "/var/loki"
      - "/var/minio"
    volumes:
      - ./apps/tempo/data:/var/tempo
      - ./apps/mimir/data:/var/mimir
      - ./apps/loki/data:/var/loki
      - ./apps/minio/data:/var/minio

  alloy:
    image: grafana/alloy
    networks:
      - net
    environment:
      - ALLOY_TEMPO_ENDPOINT=http://tempo:4317
      - ALLOY_MIMIR_ENDPOINT=http://mimir:9009/api/v1/push
      - ALLOY_LOKI_ENDPOINT=http://loki:3100/loki/api/v1/push
    ports:
      - 12345:12345
    volumes:
      - ./apps/alloy/config/config.alloy:/etc/alloy/config.alloy

  tempo:
    image: grafana/tempo
    networks:
      - net
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./apps/tempo/config/tempo.yaml:/etc/tempo.yaml
      - ./apps/tempo/data:/var/tempo
    ports:
      - "14268:14268"  # jaeger ingest
      - "3200:3200"    # tempo
      - "9095:9095"    # tempo grpc
      - "4317:4317"    # otlp grpc
      - "4318:4318"    # otlp http
      - "9411:9411"    # zipkin
    depends_on:
      - init-volumes

  mimir:
    image: grafana/mimir
    networks:
      - net
    environment:
      - MIMIR_MINIO_ACCESS_KEY_ID=zcmapFr9j9nFdgNaCMIU
      - MIMIR_MINIO_SECRET_ACCESS_KEY=bLgg5S6BQIeHUvW36ufrCdfKoDnyVf1i6cXIzSqv
      - MIMIR_MINIO_BLOCKS_BUCKET_NAME=mimirblocks
      - MIMIR_MINIO_ALERT_BUCKET_NAME=mimiralert
      - MIMIR_MINIO_RULER_BUCKET_NAME=mimirruler
    command: ["-ingester.native-histograms-ingestion-enabled=true", "-config.file=/etc/mimir.yaml", "-config.expand-env=true"]
    ports:
      - "9009:9009"
    volumes:
      - ./apps/mimir/config/mimir.yaml:/etc/mimir.yaml
      - ./apps/mimir/data:/var/mimir
    depends_on:
      - init-volumes

  loki:
    image: grafana/loki
    networks:
      - net
    ports:
      - "3100:3100"
    command: [ "-config.file=/etc/loki.yaml" ]
    volumes:
      - ./apps/loki/config/loki.yaml:/etc/loki.yaml
      - ./apps/loki/data:/var/loki
    depends_on:
      - init-volumes

  minio:
    image: minio/minio
    networks:
      - net
    environment:
    - MINIO_ADDRESS=:9000
    - MINIO_CONSOLE_ADDRESS=:9001
    - MINIO_ROOT_USER=miniorootuser
    - MINIO_ROOT_PASSWORD=miniorootpass
    ports:
      - "9000:9000"
      - "9001:9001"
    command: [ "server", "/var/minio" ]
    volumes:
      - ./apps/minio/data:/var/minio
    depends_on:
      - init-volumes

  # prometheus:
  #   image: prom/prometheus
  #   networks:
  #     - net
  #   ports:
  #     - "9090:9090"
  #   command:
  #     - --web.enable-remote-write-receiver
  #     - --config.file=/etc/prometheus/prometheus.yml
  #   volumes:
  #     - ./apps/prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml
  #     - ./apps/prometheus/data:/prometheus
